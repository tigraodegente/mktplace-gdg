#!/bin/bash

# üîÑ SCRIPT DE ROLLBACK AUTOM√ÅTICO - Cart Store Migration
# 
# Uso: ./rollback.sh [tipo]
# Tipos: 
#   - immediate: Rollback via bridge (30s)
#   - full: Rollback git completo (2min)
#   - selective: Rollback de arquivos espec√≠ficos

set -e

echo "üîÑ CART STORE ROLLBACK INICIADO"
echo "================================="

ROLLBACK_TYPE=${1:-"immediate"}
BRIDGE_FILE="./apps/store/src/lib/features/cart/stores/cartStore.bridge.ts"
BACKUP_DIR="./migration-backup-$(date +%Y%m%d_%H%M%S)"

case $ROLLBACK_TYPE in
  "immediate")
    echo "‚ö° ROLLBACK IMEDIATO - Alterando bridge..."
    
    if [ -f "$BRIDGE_FILE" ]; then
      # Backup do arquivo atual
      cp "$BRIDGE_FILE" "${BRIDGE_FILE}.rollback-backup"
      
      # Alterar USE_NEW_STORE para false
      sed -i.bak 's/const USE_NEW_STORE = true/const USE_NEW_STORE = false/' "$BRIDGE_FILE"
      
      echo "‚úÖ Bridge alterado para store antigo"
      echo "üîÑ Recarregue o navegador para aplicar mudan√ßas"
      echo ""
      echo "Para desfazer este rollback:"
      echo "sed -i.bak 's/const USE_NEW_STORE = false/const USE_NEW_STORE = true/' $BRIDGE_FILE"
    else
      echo "‚ùå Arquivo bridge n√£o encontrado: $BRIDGE_FILE"
      exit 1
    fi
    ;;
    
  "full")
    echo "üîÑ ROLLBACK COMPLETO - Git reset..."
    
    # Criar backup dos arquivos atuais
    mkdir -p "$BACKUP_DIR"
    echo "üìÅ Criando backup em: $BACKUP_DIR"
    
    # Backup dos arquivos modificados
    git diff --name-only HEAD^ | while read file; do
      if [ -f "$file" ]; then
        mkdir -p "$BACKUP_DIR/$(dirname "$file")"
        cp "$file" "$BACKUP_DIR/$file"
      fi
    done
    
    # Reset git
    echo "‚ö†Ô∏è  ATEN√á√ÉO: Fazendo git reset --hard HEAD^"
    echo "Pressione ENTER para continuar ou Ctrl+C para cancelar..."
    read
    
    git reset --hard HEAD^
    
    echo "‚úÖ Rollback git completo realizado"
    echo "üìÅ Backup salvo em: $BACKUP_DIR"
    ;;
    
  "selective")
    echo "üéØ ROLLBACK SELETIVO - Arquivos espec√≠ficos..."
    
    # Lista de arquivos cr√≠ticos para reverter
    CRITICAL_FILES=(
      "apps/store/src/routes/+layout.svelte"
      "apps/store/src/routes/cart/+page.svelte"
      "apps/store/src/routes/checkout/+page.svelte"
      "apps/store/src/lib/components/cart/index.ts"
    )
    
    echo "Arquivos que ser√£o revertidos:"
    for file in "${CRITICAL_FILES[@]}"; do
      echo "  - $file"
    done
    
    echo ""
    echo "Pressione ENTER para continuar ou Ctrl+C para cancelar..."
    read
    
    for file in "${CRITICAL_FILES[@]}"; do
      if [ -f "$file" ]; then
        echo "üîÑ Revertendo: $file"
        git checkout HEAD^ -- "$file"
      else
        echo "‚ö†Ô∏è  Arquivo n√£o encontrado: $file"
      fi
    done
    
    echo "‚úÖ Rollback seletivo conclu√≠do"
    ;;
    
  *)
    echo "‚ùå Tipo de rollback inv√°lido: $ROLLBACK_TYPE"
    echo ""
    echo "Tipos dispon√≠veis:"
    echo "  immediate - Rollback via bridge (30s)"
    echo "  full      - Rollback git completo (2min)"
    echo "  selective - Rollback arquivos cr√≠ticos"
    exit 1
    ;;
esac

echo ""
echo "üéâ ROLLBACK CONCLU√çDO!"
echo "========================"
echo ""
echo "Pr√≥ximos passos:"
echo "1. Recarregue o navegador"
echo "2. Teste funcionalidades b√°sicas"
echo "3. Verifique se problemas foram resolvidos"
echo ""
echo "Para logs detalhados: git log --oneline -5" 